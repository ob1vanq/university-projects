# 7. Сформувати сигнал синусоїди частоти 20 Гц амплітуди 1 В та тривалості 0.5 сек. для
# частоти дискретизації 128 Гц. Додати до цього сигналу шумову складову з середнім значенням
# 10В (функція numpy.random.normal). Отримати амплітудний спектр заданого сигналу.
# 7.1. Збільшувати тривалість зашумленого сигналу (1, 10, 100, 1000 сек.), отримуючи для
# кожного сигналу його амплітудний спектр.
# Побудувати за допомогою функції plot графіки сигналів та їх амплітудних спектрів,
# зробити висновки щодо впливу тривалості сигналу на роздільну здатність в частотній області та на
# якість визначення наявності синусоїдального коливання в шумі за спектральними
# характеристиками.
# 7.2. Збільшувати частоту дискретизації зашумленого сигналу тривалості 0.5 сек (1280,
# 12800, 128000 Гц), отримуючи для кожного сигналу його амплітудний спектр. На графік кожного
# разу виводити спектр в межах від 0 до 100 Гц.
# Побудувати за допомогою функції plot графіки сигналів та їх амплітудних спектрів,
# зробити висновки щодо впливу частоти дискретизації сигналу на роздільну здатність в частотній
# області та на якість визначення наявності синусоїдального коливання в шумі за спектральними
# характеристиками.

import numpy as np
import matplotlib.pyplot as plt
from params import c1, c2, spectrum

fs = 128
time = [0.5, 1, 10, 100, 1000]
fig, axs = plt.subplots(5, 2, figsize=(14, 14))
for i in range(5):
    t = np.linspace(0, time[i], int(time[i] * fs))
    sig = np.sin(2 * np.pi * t * 20)
    sig = [i + np.random.normal() for i in sig]
    axs[i, 0].plot(t, sig, c1)
    axs[i, 1].plot(np.linspace(0, fs/2, int(len(sig)/2)), spectrum(sig)*4/fs, c2)
    axs[i, 0].set_title("Сигнал з частотою 20 Гц")
    axs[i, 1].set_title("Спектр сигналу частота дискретизації 128 Гц")
for ax in axs.flat:
    ax.grid()
fig.savefig("data/7.1.png")
plt.show()
plt.close()

freq = [128, 1280, 12800, 128000]
fig, axs = plt.subplots(4, 2, figsize=(14, 14))
for i in range(4):
    fs = freq[i]
    t = np.linspace(0, 0.5, int(0.5 * fs))
    sig = np.sin(2 * np.pi * t * 20)
    sig = [i + np.random.normal() for i in sig]
    axs[i, 0].plot(t, sig, c1)
    axs[i, 1].plot(np.linspace(0, fs/2, int(len(sig)/2))[:100], (spectrum(sig)*4/fs)[:100], c2)
    axs[i, 0].set_title("Сигнал з частотою 20 Гц")
    axs[i, 1].set_title(f"Спектр сигналу частота дискретизації {fs} Гц")
for ax in axs.flat:
    ax.grid()
plt.tight_layout()
fig.savefig("data/7.2.png")
plt.show()
plt.close()